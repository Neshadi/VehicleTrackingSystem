pipeline {
    agent any 
    
    stages { 
        stage('SCM Checkout') {
            steps {
                retry(3) {
                    git branch: 'master', url: 'https://github.com/Neshadi/VehicleTrackingSystem.git'
                }
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    sh "docker build -t hirunika/server-image -f Dockerfileserver ."
                    sh "docker build -t hirunika/client-image -f Dockerfileclient ."
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                   echo "eEc3eY@G8parg\$D" | docker login -u $DOCKER_USER --password-stdin

                        // sh "docker login -u $DOCKER_USER -p $DOCKER_PASS"
                    }
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    sh "docker push hirunika/server-image"
                    sh "docker push hirunika/client-image"
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
    }
}


// pipeline {
//     agent any 
     
//     stages { 
//         stage('SCM Checkout') {
//             steps {
//                 retry(3) {
//                     git branch: 'master', url: 'https://github.com/Neshadi/VehicleTrackingSystem.git'
//                 }
//             }
//         }

//         stage('Build and Push Docker Images') {
//             steps {  
//                 script {
//                     // Build first image (server) without version tag
//                     bat "docker build -t hirunika/server-image -f Dockerfileserver ."

//                     // Build second image (client) without version tag
//                     bat "docker build -t hirunika/client-image -f Dockerfileclient ."
//                 }
//             }
//         }

//         stage('Login to Docker Hub') {
//             steps {
//                 withCredentials([string(credentialsId: 'test-dockerpass', variable: 'test-dockerpass')]) {
//                     script {
//                         bat "docker login -u hirunika -p %test-dockerpass%"
//                     }
//                 }
//             }
//         }

//         stage('Push Image') {
//             steps {
//                 script {
//                     // Push images without version tag
//                     bat "docker push hirunika/server-image"
//                     bat "docker push hirunika/client-image"
//                 }
//             }
//         }
//     }

//     post {
//         always {
//             bat 'docker logout'
//         }
//     }
// }
